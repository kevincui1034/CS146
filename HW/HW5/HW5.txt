# Question 1
1. T(N) = 2T(N-1) + 1
    T(N-1) = 2T(n-2) + 1
    T(N-2) = 2T(n-3) + 1

2. T(N) = 3T(N-1) + n
3. T(N) = 9T(N/2) + n2
4. T(N) = 100T(N/2) + nlog2cn + 1  (c is a constant)
5. T(N) = 4T(N/2) + n2logn
6. T(N) = 5T(N/2) + n2/logn


# Question 2

yetAnotherFunc(n): 
  if n > 1: 
    for(i=0;i<10n;i++)
      doSomething;
    yetAnotherFunc(n/2);
    yetAnotherFunc(n/2);

T(n) = 2T(n/2) + 10
a = 2
b = 2
f(n) = n

n^log(2)(2) = 1
1 < n

Case 3:
    Time complexity = T(n) = Î˜(n)