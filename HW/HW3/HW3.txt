##Question 1

def insertion_sort(A, n):
    for i in range(1, n):       ## This is (n -1)
        key = A[i]
        j = i - 1
        while j >= 0 and key < A[j]:  ## this is (n-1)(n-1+1)
            A[j + 1] = A[j]
            j -= 1
        A[j + 1] = key
    return A

## So, (2(k-1)(k-1+1))/2 > n
## Approximating, k^2 > n
## k > squareroot(n)
## So, order of growth is squareroot(n)

##Question 2

MATRIX_MULTIPLY(A, B): 
  if columns(A) ≠ rows(B): 
    raise ValueError("Matrix multiplication is not defined.") 

  rows_A ← number of rows in A 
  cols_A ← number of columns in A 
  cols_B ← number of columns in B 
  result ← matrix of size rows_A x cols_B filled with zeros 

  for i from 1 to rows_A do:    ## this is (n)
    for j from 1 to cols_B do:  ## this is (n)(n)
    sum ← 0 
      for k from 1 to cols_A do:    ## this is (n)(n)(n)
        sum ← sum + A[i][k] * B[k][j] 
      result[i][j] ← sum return result

## So, (k)(k)(k)
## Approximating k^3 > n
## SO, order of growth is cubicsquareroot(n)